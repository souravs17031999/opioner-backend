version: "3.9"
services:
  auth_service:
    build:
      context: auth-service-taskly
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8081:8081"
    depends_on:
      - postgres
    links:
      - postgres
    environment:
      - PGHOST
      - PGUSER
      - PGPASSWORD
      - PGDATABASE
      - REQUIRE_DB_INSERT
      - ALLOWED_ORIGIN_HOST_PROD
      - TEST_JENKINS_BUILD
      - REQUIRE_DB_MIGRATIONS
  user_service:
    build:
      context: user-service-taskly
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8082:8082"
    depends_on:
      - postgres
    links:
      - postgres
    environment:
      - PGHOST
      - PGUSER
      - PGPASSWORD
      - PGDATABASE
      - ALLOWED_ORIGIN_HOST_PROD
      - TEST_JENKINS_BUILD
  product_service:
    build:
      context: product-service-taskly
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8083:8083"
    depends_on:
      - postgres
    links:
      - postgres
    environment:
      - PGHOST
      - PGUSER
      - PGPASSWORD
      - PGDATABASE
      - ALLOWED_ORIGIN_HOST_PROD
      - TEST_JENKINS_BUILD
  notification_service:
    build:
      context: notification-service-taskly
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8084:8084"
    depends_on:
      - postgres
    links:
      - postgres
    environment:
      - PGHOST
      - PGUSER
      - PGPASSWORD
      - PGDATABASE
      - ALLOWED_ORIGIN_HOST_PROD
      - TEST_JENKINS_BUILD
      - SENDGRID_API_KEY_PROD
  cron_service:
    build:
      context: cron-service-taskly
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8085:8085"
    depends_on:
      - postgres
    links:
      - postgres
    environment:
      - PGHOST
      - PGUSER
      - PGPASSWORD
      - PGDATABASE
      - ALLOWED_ORIGIN_HOST_PROD
      - TEST_JENKINS_BUILD
      - SENDGRID_API_KEY_PROD
  postgres:
    image: postgres
    restart: always
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_USER
    volumes:
      - ./dbdata:/var/lib/postgresql/data
      - ./auth-service-taskly/dbinit/dev_26092021.sql:/docker-entrypoint-initdb.d/my_dump.sql'
