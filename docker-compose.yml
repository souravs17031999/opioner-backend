version: "3.9"
services:
  auth_service:
    build:
      context: auth-service
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8081:8081"
    depends_on:
      - postgres
      - redis
    links:
      - postgres
      - redis
    environment:
      - PGHOST
      - PGUSER
      - PGPASSWORD
      - PGDATABASE
      - REQUIRE_DB_INSERT
      - ALLOWED_ORIGIN_HOST_PROD
      - TEST_JENKINS_BUILD
      - REQUIRE_DB_MIGRATIONS
      - PORT=8081
      - DATABASE_URL
      - REDIS_DB
      - REDIS_USERNAME
      - REDIS_HOST
      - REDIS_PASSWORD
      - REDIS_PORT 
      - REDIS_URL 
      - NOTIFICATION_INTERNAL_URL
      - APM_MONITORING_NEWRELIC
      - SECRET_KEY
    volumes:
      - ./auth-service:/app
  user_service:
    build:
      context: user-service
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8082:8082"
    depends_on:
      - postgres
    links:
      - postgres
    environment:
      - PGHOST
      - PGUSER
      - PGPASSWORD
      - PGDATABASE
      - ALLOWED_ORIGIN_HOST_PROD
      - TEST_JENKINS_BUILD
      - FIREBASE_PROFILE_PIC_PATH
      - PORT=8082
      - DATABASE_URL
      - APM_MONITORING_NEWRELIC
      - SECRET_KEY
      - FIREBASE_SECRET_CONFIG
    volumes:
      - ./user-service:/app
  product_service:
    build:
      context: product-service
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8083:8083"
    depends_on:
      - postgres
    links:
      - postgres
    environment:
      - PGHOST
      - PGUSER
      - PGPASSWORD
      - PGDATABASE
      - ALLOWED_ORIGIN_HOST_PROD
      - TEST_JENKINS_BUILD
      - PORT=8083
      - DATABASE_URL
      - APM_MONITORING_NEWRELIC
      - SECRET_KEY
    volumes:
      - ./product-service:/app
  notification_service:
    build:
      context: notification-service
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8086:8084"
    depends_on:
      - postgres
    links:
      - postgres
    environment:
      - PGHOST
      - PGUSER
      - PGPASSWORD
      - PGDATABASE
      - ALLOWED_ORIGIN_HOST_PROD
      - TEST_JENKINS_BUILD
      - SENDGRID_API_KEY_PROD
      - PORT=8084
      - DATABASE_URL
      - APM_MONITORING_NEWRELIC
      - SECRET_KEY
    volumes:
      - ./notification-service:/app
  cron_service:
    build:
      context: cron-service
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8085:8085"
    depends_on:
      - postgres
    links:
      - postgres
    environment:
      - PGHOST
      - PGUSER
      - PGPASSWORD
      - PGDATABASE
      - ALLOWED_ORIGIN_HOST_PROD
      - TEST_JENKINS_BUILD
      - SENDGRID_API_KEY_PROD
      - PORT=8085
      - DATABASE_URL
      - APM_MONITORING_NEWRELIC
      - SECRET_KEY
    volumes:
      - ./cron-service:/app
  postgres:
    image: postgres:13
    restart: always
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_USER
    volumes:
      - ./dbdata:/var/lib/postgresql/data
      - ./auth-service/dbinit/dev_26092021.sql:/docker-entrypoint-initdb.d/my_dump.sql'
  redis:
    image: redis:6.2.6
    restart: always
    ports:
      - "6380:6379"
